
! initialize matA
call MatCreate(MPI_COMM_WORLD, matA, ierr)
CHKERRQ(ierr)
call MatSetType(matA, MATMPIAIJ, ierr)
CHKERRQ(ierr)
if (finitebeta > 2) then
  call MatSetSizes(matA, PETSC_DECIDE, PETSC_DECIDE, (m2 - m1 + 1) * 2, (m2 - m1 + 1) * 2, ierr)
  CHKERRQ(ierr)
  call MatMPIAIJSetPreallocation(matA, min(nfft, noffdiag) * 2 + 1, PETSC_NULL_INTEGER, min(nfft, noffdiag) * 2 + 1, PETSC_NULL_INTEGER, ierr)
  CHKERRQ(ierr)
else
  call MatSetSizes(matA, PETSC_DECIDE, PETSC_DECIDE, m2 - m1 + 1, m2 - m1 + 1, ierr)
  CHKERRQ(ierr)
  call MatMPIAIJSetPreallocation(matA, min(nfft, noffdiag) * 2 + 1, PETSC_NULL_INTEGER, 0, PETSC_NULL_INTEGER, ierr)
  CHKERRQ(ierr)
endif
! initialize matB
call MatCreate(MPI_COMM_WORLD, matB, ierr)
CHKERRQ(ierr)
call MatSetType(matB, MATMPIAIJ, ierr)
CHKERRQ(ierr)
if (finitebeta > 2) then
  call MatSetSizes(matB, PETSC_DECIDE, PETSC_DECIDE, (m2 - m1 + 1) * 2, (m2 - m1 + 1) * 2, ierr)
  CHKERRQ(ierr)
  call MatMPIAIJSetPreallocation(matB, min(nfft, noffdiag) * 2 + 1, PETSC_NULL_INTEGER, min(nfft, noffdiag) * 2 + 1, PETSC_NULL_INTEGER, ierr)
  CHKERRQ(ierr)
else
  call MatSetSizes(matB, PETSC_DECIDE, PETSC_DECIDE, m2 - m1 + 1, m2 - m1 + 1, ierr)
  CHKERRQ(ierr)
  call MatMPIAIJSetPreallocation(matB, min(nfft, noffdiag) * 2 + 1, PETSC_NULL_INTEGER, 0, PETSC_NULL_INTEGER, ierr)
  CHKERRQ(ierr)
endif

! initialize acsolver
!call EPSCreate(MPI_COMM_WORLD, acsolver, ierr)
!CHKERRQ(ierr)
!!call EPSSetProblemType(acsolver, EPS_PGNHEP, ierr)
!!CHKERRQ(ierr)
!call EPSSetWhichEigenpairs(acsolver, EPS_SMALLEST_MAGNITUDE, ierr)
!CHKERRQ(ierr)
!if (finitebeta > 2) then
!  call EPSSetDimensions(acsolver, (m2 - m1 + 1) * 2, PETSC_DECIDE, PETSC_DECIDE, ierr)
!  CHKERRQ(ierr)
!elseif (finitebeta == 2) then
!  call EPSSetDimensions(acsolver, m2 - m1 + 1, PETSC_DECIDE, PETSC_DECIDE, ierr)
!  CHKERRQ(ierr)
!else
!  call EPSSetDimensions(acsolver, nev, PETSC_DECIDE, PETSC_DECIDE, ierr)
!  CHKERRQ(ierr)
!endif
!call EPSSetOperators(acsolver, matA, matB, ierr)
!CHKERRQ(ierr)

! initialize evecre and evecim
call VecCreate(MPI_COMM_WORLD, evecre, ierr)
CHKERRQ(ierr)
if (finitebeta > 2) then
  call VecSetSizes(evecre, PETSC_DECIDE, (m2 - m1 + 1) * 2, ierr)
  CHKERRQ(ierr)
else
  call VecSetSizes(evecre, PETSC_DECIDE, m2 - m1 + 1, ierr)
  CHKERRQ(ierr)
endif
call VecSetFromOptions(evecre, ierr)
CHKERRQ(ierr)
call VecDuplicate(evecre, evecim, ierr)
CHKERRQ(ierr)

